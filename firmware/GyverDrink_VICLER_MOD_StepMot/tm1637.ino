uint8_t AnimationData_0[20][4] {
  {0x40, 0x00, 0x00, 0x00},       //-
  {0x00, 0x40, 0x00, 0x00},       // -
  {0x00, 0x00, 0x40, 0x00},       //  -
  {0x00, 0x00, 0x00, 0x40},       //   -
  {0x40, 0x00, 0x00, 0x40},       //-  -
  {0x00, 0x40, 0x00, 0x40},       // - -
  {0x00, 0x00, 0x40, 0x40},       //  --
  {0x40, 0x00, 0x40, 0x40},       //- --
  {0x00, 0x40, 0x40, 0x40},       // ---
  {0x40, 0x40, 0x40, 0x40},       //----
  {0x40, 0x40, 0x40, 0x00},       //---
  {0x40, 0x40, 0x00, 0x40},       //-- -
  {0x40, 0x40, 0x00, 0x00},       //--
  {0x40, 0x00, 0x40, 0x00},       //- -
  {0x40, 0x00, 0x00, 0x40},       //-  -
  {0x40, 0x00, 0x00, 0x00},       //-
  {0x00, 0x40, 0x00, 0x00},       // -
  {0x00, 0x00, 0x40, 0x00},       //  -
  {0x00, 0x00, 0x00, 0x40},       //   -
  {0x00, 0x00, 0x00, 0x00}        //
};
uint8_t AnimationData_1[12][4] {
  {0x40, 0x42, 0x50, 0x40},        //
  {0x50, 0x40, 0x40, 0x42},        //
  {0x58, 0x00, 0x00, 0x43},        //
  {0x18, 0x08, 0x01, 0x03},        //
  {0x08, 0x0c, 0x21, 0x01},        //
  {0x00, 0x4c, 0x61, 0x00},        //
  {0x40, 0x44, 0x60, 0x40},        //
  {0x60, 0x40, 0x40, 0x44},        //
  {0x61, 0x00, 0x00, 0x4c},        //
  {0x21, 0x01, 0x08, 0x0c},        //
  {0x01, 0x03, 0x18, 0x08},        //
  {0x00, 0x43, 0x58, 0x00},        //
};
uint8_t AnimationData_2[12][4] {
  {0x01, 0x01, 0x01, 0x00},        //
  {0x00, 0x01, 0x01, 0x01},        //
  {0x00, 0x00, 0x01, 0x03},        //
  {0x00, 0x00, 0x00, 0x07},        //
  {0x00, 0x00, 0x00, 0x0e},        //
  {0x00, 0x00, 0x08, 0x0c},        //
  {0x00, 0x08, 0x08, 0x08},        //
  {0x08, 0x08, 0x08, 0x00},        //
  {0x18, 0x08, 0x00, 0x00},        //
  {0x38, 0x00, 0x00, 0x00},        //
  {0x31, 0x00, 0x00, 0x00},        //
  {0x21, 0x01, 0x00, 0x00},        //
};
uint8_t AnimationData_3[60][4] {
  {0x31, 0x00, 0x00, 0x00},        //
  {0x23, 0x00, 0x00, 0x00},        //
  {0x07, 0x00, 0x00, 0x00},        //
  {0x0e, 0x00, 0x00, 0x00},        //
  {0x1c, 0x00, 0x00, 0x00},        //
  {0x38, 0x00, 0x00, 0x00},        //

  {0x31, 0x00, 0x00, 0x00},        //
  {0x21, 0x01, 0x00, 0x00},        //
  {0x01, 0x03, 0x00, 0x00},        //
  {0x00, 0x07, 0x00, 0x00},        //
  {0x00, 0x0e, 0x00, 0x00},        //
  {0x08, 0x0c, 0x00, 0x00},        //
  {0x18, 0x08, 0x00, 0x00},        //
  {0x38, 0x00, 0x00, 0x00},        //

  {0x31, 0x00, 0x00, 0x00},        //
  {0x21, 0x01, 0x00, 0x00},        //
  {0x01, 0x01, 0x01, 0x00},        //
  {0x00, 0x01, 0x03, 0x00},        //
  {0x00, 0x00, 0x07, 0x00},        //
  {0x00, 0x00, 0x0e, 0x00},        //
  {0x00, 0x08, 0x0c, 0x00},        //
  {0x08, 0x08, 0x08, 0x00},        //
  {0x18, 0x08, 0x00, 0x00},        //
  {0x38, 0x00, 0x00, 0x00},        //

  {0x31, 0x00, 0x00, 0x00},        //
  {0x21, 0x01, 0x00, 0x00},        //
  {0x01, 0x01, 0x01, 0x00},        //
  {0x00, 0x01, 0x01, 0x01},        //
  {0x00, 0x00, 0x01, 0x03},        //
  {0x00, 0x00, 0x00, 0x07},        //

  {0x00, 0x00, 0x00, 0x0e},        //
  {0x00, 0x00, 0x08, 0x0c},        //
  {0x00, 0x08, 0x08, 0x08},        //
  {0x00, 0x18, 0x08, 0x00},        //
  {0x00, 0x38, 0x00, 0x00},        //
  {0x00, 0x31, 0x00, 0x00},        //
  {0x00, 0x21, 0x01, 0x00},        //
  {0x00, 0x01, 0x01, 0x01},        //
  {0x00, 0x00, 0x01, 0x03},        //
  {0x00, 0x00, 0x00, 0x07},        //

  {0x00, 0x00, 0x00, 0x0e},        //
  {0x00, 0x00, 0x08, 0x0c},        //
  {0x00, 0x00, 0x18, 0x08},        //
  {0x00, 0x00, 0x38, 0x00},        //
  {0x00, 0x00, 0x31, 0x00},        //
  {0x00, 0x00, 0x21, 0x01},        //
  {0x00, 0x00, 0x01, 0x03},        //
  {0x00, 0x00, 0x00, 0x07},        //

  {0x00, 0x00, 0x00, 0x0e},        //
  {0x00, 0x00, 0x00, 0x1c},        //
  {0x00, 0x00, 0x00, 0x38},        //
  {0x00, 0x00, 0x00, 0x31},        //
  {0x00, 0x00, 0x00, 0x23},        //
  {0x00, 0x00, 0x00, 0x07},        //
  {0x00, 0x00, 0x00, 0x0e},        //
  {0x00, 0x00, 0x08, 0x0c},        //
  {0x00, 0x08, 0x08, 0x08},        //
  {0x08, 0x08, 0x08, 0x00},        //
  {0x18, 0x08, 0x00, 0x00},        //
  {0x38, 0x00, 0x00, 0x00}         //
};
uint8_t AnimationData_4[2][4] {
  {0x63, 0x5c, 0x63, 0x5c},        //
  {0x5c, 0x63, 0x5c, 0x63},        //
};
uint8_t AnimationData_5[6][4] {
  {0x63, 0x00, 0x00, 0x5c},        //
  {0x00, 0x63, 0x5c, 0x00},        //
  {0x00, 0x5c, 0x63, 0x00},        //
  {0x5c, 0x00, 0x00, 0x63},        //
  {0x00, 0x5c, 0x63, 0x00},        //
  {0x00, 0x63, 0x5c, 0x00}         //
};
uint8_t AnimationData_6[8][4] {
  {0x63, 0x00, 0x00, 0x00},        //
  {0x00, 0x63, 0x00, 0x00},        //
  {0x00, 0x00, 0x63, 0x00},        //
  {0x00, 0x00, 0x00, 0x63},        //
  {0x00, 0x00, 0x00, 0x5c},        //
  {0x00, 0x00, 0x5c, 0x00},        //
  {0x00, 0x5c, 0x00, 0x00},        //
  {0x5c, 0x00, 0x00, 0x00}         //
};
uint8_t AnimationData_7[12][4] {
  {0x30, 0x00, 0x00, 0x00},       //|
  {0x00, 0x00, 0x00, 0x00},       //
  {0x40, 0x00, 0x00, 0x00},       //-
  {0x00, 0x40, 0x00, 0x00},       // -
  {0x00, 0x00, 0x40, 0x00},       //  -
  {0x00, 0x00, 0x00, 0x40},       //   -
  {0x00, 0x00, 0x00, 0x06},       //    |
  {0x00, 0x00, 0x00, 0x00},       //
  {0x00, 0x00, 0x00, 0x40},       //   -
  {0x00, 0x00, 0x40, 0x00},       //  -
  {0x00, 0x40, 0x00, 0x00},       // -
  {0x40, 0x00, 0x00, 0x00}        //-
};

void showAnimation(byte mode, uint8_t period) {
  static timerMinim timer(period);
  if (!timer.isReady()) return;

  static byte i = 0;
  if (mode == 0) {
    if (i >= 20) i = 0;
    disp.displayByte(AnimationData_0[i++]);
  }
  else if (mode == 1) {
    if (i >= 12) i = 0;
    disp.displayByte(AnimationData_1[i++]);
  }
  else if (mode == 2) {
    if (i >= 12) i = 0;
    disp.displayByte(AnimationData_2[i++]);
  }
  else if (mode == 3) {
    if (i >= 60) i = 0;
    disp.displayByte(AnimationData_3[i++]);
  }
  else if (mode == 4) {
    if (i >= 2) i = 0;
    disp.displayByte(AnimationData_4[i++]);
  }
  else if (mode == 5) {
    if (i >= 6) i = 0;
    disp.displayByte(AnimationData_5[i++]);
  }
  else if (mode == 6) {
    if (i >= 8) i = 0;
    disp.displayByte(AnimationData_6[i++]);
  }
  else if (mode == 7) {
    if (i >= 12) i = 0;
    disp.displayByte(AnimationData_7[i++]);
  }
}

// выводим режим
void dispMode() {
  if (workMode) {
    if (thisVolume < 100) disp.displayByte(0, 64);
    disp.displayByte(3, 64);
  }
  else {
    if (thisVolume < 100) disp.displayByte(0, 0x00);
    disp.displayByte(3, 0x00);
  }
}

void dispNum(uint16_t num) {
  //  static int lastNum = -1;
  //  if (num == lastNum) return;
  //  lastNum = num;

  if (num < 100) {
    if (!workMode) disp.displayByte(0, 0x00);
    else disp.displayByte(0, 0x40);
    if (num < 10) disp.displayByte(1, 0x00);
    else disp.display(1, num / 10);
    disp.display(2, num % 10);
    if (!workMode) disp.displayByte(3, 0x00);
    else disp.displayByte(3, 0x40);
  }
  else if (num < 1000) {
    disp.display(0, num / 100);
    disp.display(1, (num % 100) / 10);
    disp.display(2, num % 10);
    if (!workMode) disp.displayByte(3, 0x00);
    else disp.displayByte(3, 0x40);
  }
  else {
    disp.display(0, num / 1000);                                            // тысячные
    if ( (num % 1000) / 100 > 0 )  disp.display(1, (num % 1000) / 100);     // сотые
    else disp.displayByte(1, 0x00);
    if ( ((num % 100) / 10 > 0) || ((num % 1000) / 100 > 0) )  disp.display(2, (num % 100) / 10);         // десятые
    else disp.displayByte(2, 0x00);
    disp.display(3, num % 10);
  }
}
