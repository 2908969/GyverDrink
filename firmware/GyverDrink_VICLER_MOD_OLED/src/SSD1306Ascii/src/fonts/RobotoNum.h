

/*
 *
 * RobotoNum
 *
 * created with FontCreator
 * written by F. Maximilian Thiele
 *
 * http://www.apetech.de/fontCreator
 * me@apetech.de
 *
 * File Name           : RobotoNum.h
 * Date                : 17.06.2020
 * Font size in bytes  : 5497
 * Font width          : 10
 * Font height         : 29
 * Font first char     : 48
 * Font last char      : 58
 * Font used chars     : 10
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#include <inttypes.h>
#include <avr/pgmspace.h>

#ifndef ROBOTONUM_H
#define ROBOTONUM_H

#define ROBOTONUM_WIDTH 10
#define ROBOTONUM_HEIGHT 29

static const uint8_t RobotoNum[] PROGMEM = {
    0x15, 0x79, // size
    0x0A, // width
    0x1D, // height
    0x30, // first char
    0x0A, // char count
    
    // char widths
    0x13, 0x0C, 0x14, 0x13, 0x16, 0x13, 0x13, 0x15, 0x13, 0x13, 
    
    
    // font data
    0x00, 0xE0, 0xF8, 0xFC, 0xFE, 0x7E, 0x1F, 0x0F, 0x07, 0x07, 0x07, 0x07, 0x0F, 0x1E, 0xFE, 0xFC, 0xFC, 0xF0, 0xC0, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xF8, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x18, 0x38, 0x78, 0x78, 0xF8, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0x78, 0x78, 0x38, 0x38, 0x08, 0x00, // 48
    0x70, 0x70, 0x78, 0x38, 0x3C, 0x3C, 0x1C, 0x1E, 0xFE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0xF8, // 49
    0xE0, 0xF8, 0xFC, 0xFC, 0xFE, 0x1E, 0x0F, 0x07, 0x07, 0x07, 0x07, 0x0F, 0x0F, 0x3E, 0xFE, 0xFE, 0xFC, 0xF8, 0xC0, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xF0, 0xF8, 0xFF, 0x7F, 0x3F, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF8, 0xFC, 0x7E, 0x3F, 0x1F, 0x0F, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8, 0xE8, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, // 50
    0xE0, 0xF8, 0xFC, 0xFC, 0xFE, 0x1E, 0x0F, 0x07, 0x07, 0x07, 0x07, 0x0F, 0x0F, 0x3E, 0xFE, 0xFC, 0xF8, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xF8, 0xFC, 0xBF, 0xBF, 0x1F, 0x07, 0x00, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0xFF, 0xFF, 0xFF, 0xFE, 0xF8, 0x00, 0x18, 0x38, 0x78, 0x78, 0x78, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0x78, 0x78, 0x38, 0x38, 0x18, 0x00, // 51
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF0, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xE0, 0xF8, 0xFC, 0x7F, 0x3F, 0x0F, 0x07, 0x01, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x38, 0x3C, 0x3F, 0x3F, 0x3F, 0x3B, 0x39, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x38, 0x38, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, // 52
    0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, 0x00, 0x3C, 0x7F, 0x7F, 0x7F, 0x7F, 0x3C, 0x1C, 0x1C, 0x1C, 0x1C, 0x3C, 0x7C, 0xF8, 0xF8, 0xF0, 0xF0, 0xC0, 0x00, 0xE0, 0xE0, 0xE0, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x18, 0x38, 0x38, 0x78, 0x78, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xF0, 0x78, 0x78, 0x38, 0x18, 0x08, 0x00, // 53
    0x00, 0x80, 0xE0, 0xF0, 0xF8, 0xFC, 0x3E, 0x1E, 0x0E, 0x0F, 0x0F, 0x07, 0x07, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFB, 0x78, 0x3C, 0x1C, 0x1C, 0x1C, 0x1C, 0x3C, 0x7C, 0xF8, 0xF8, 0xF0, 0xE0, 0xC0, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xFF, 0xFF, 0xFF, 0xFF, 0x1C, 0x00, 0x08, 0x18, 0x38, 0x78, 0x78, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xF8, 0x78, 0x78, 0x38, 0x18, 0x00, 0x00, // 54
    0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xC7, 0xF7, 0xFF, 0xFF, 0x7F, 0x1F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF8, 0xFF, 0xFF, 0x3F, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF8, 0xFE, 0xFF, 0x7F, 0x1F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF8, 0xF8, 0xF8, 0x78, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 55
    0x00, 0xE0, 0xF8, 0xFC, 0xFE, 0xFE, 0x1F, 0x0F, 0x07, 0x07, 0x07, 0x0F, 0x0F, 0x3E, 0xFE, 0xFC, 0xFC, 0xF0, 0xC0, 0x00, 0x07, 0x1F, 0xBF, 0xBF, 0xFF, 0xF8, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xFC, 0xBF, 0xBF, 0x1F, 0x0F, 0x01, 0xF8, 0xFE, 0xFF, 0xFF, 0xFF, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0xCF, 0xFF, 0xFF, 0xFE, 0xFC, 0x00, 0x18, 0x38, 0x38, 0x78, 0x78, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xF8, 0x78, 0x78, 0x38, 0x18, 0x08, // 56
    0xC0, 0xF0, 0xF8, 0xFC, 0xFE, 0x1E, 0x0F, 0x07, 0x07, 0x07, 0x07, 0x0F, 0x1E, 0x7E, 0xFE, 0xFC, 0xF8, 0xE0, 0x00, 0x1F, 0x7F, 0xFF, 0xFF, 0xFF, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x01, 0x03, 0x03, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xC3, 0xE3, 0xFF, 0xFF, 0xFF, 0x3F, 0x03, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xF0, 0x78, 0x78, 0x38, 0x38, 0x18, 0x08, 0x00, 0x00, 0x00 // 57
    
};

#endif
